<UserControl
    x:Class="MyToDo.Views.MemoView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:converters="clr-namespace:MyToDo.Common.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:MyToDo.Views"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <UserControl.Resources>
        <converters:IntToVisibilityConverter x:Key="IntToVisibilityConverter" />
    </UserControl.Resources>
    <materialDesign:DialogHost>
        <!--  定义一个侧边栏窗口容器  -->
        <materialDesign:DrawerHost IsRightDrawerOpen="{Binding RightDrawerOpen}">
            <!--  将侧边栏窗口容器实例化为右侧窗口容器  -->
            <materialDesign:DrawerHost.RightDrawerContent>
                <DockPanel Width="300" LastChildFill="False">
                    <TextBlock
                        Padding="20,10"
                        DockPanel.Dock="Top"
                        FontSize="20"
                        FontWeight="Bold"
                        Text="添加备忘录" />
                    <TextBox
                        Padding="20"
                        materialDesign:HintAssist.Hint="请输入备忘录概要"
                        DockPanel.Dock="Top"
                        FontSize="15"
                        Text="{Binding CurrentMemo.Title}" />
                    <TextBox
                        MinHeight="100"
                        Padding="20"
                        materialDesign:HintAssist.Hint="请输入备忘录内容"
                        DockPanel.Dock="Top"
                        FontSize="15"
                        Text="{Binding CurrentMemo.Content}"
                        TextWrapping="WrapWithOverflow" />
                    <Button
                        Command="{Binding ExecuteCommand}"
                        CommandParameter="保存"
                        Content="添加到备忘录"
                        DockPanel.Dock="Top" />
                </DockPanel>
            </materialDesign:DrawerHost.RightDrawerContent>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <StackPanel Margin="15,0,0,0" Orientation="Horizontal">
                    <TextBox
                        Width="250"
                        VerticalContentAlignment="Center"
                        materialDesign:HintAssist.Hint="查找备忘录..."
                        materialDesign:TextFieldAssist.HasClearButton="True"
                        Text="{Binding Search, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <TextBox.InputBindings>
                            <KeyBinding
                                Key="Enter"
                                Command="{Binding ExecuteCommand}"
                                CommandParameter="查询" />
                        </TextBox.InputBindings>
                    </TextBox>
                </StackPanel>
                <Button
                    Margin="10,5"
                    HorizontalAlignment="Right"
                    Command="{Binding ExecuteCommand}"
                    CommandParameter="新增"
                    Content="添加备忘录" />
                <!--
                    注意：如果在上一层Grid中的第二行高度设置为自动的话则这里的滚动条失效
                    因为滚动条滚动的条件是内容的宽度大于滚动区域的宽度才生效
                    如果行和滚动区域都不设置高度或者都设置为自动则无法判断
                -->
                <!--  这里使用了绑定转换的技术 可以在最上面的空间资源中找到转换类的申明以及如何使用  -->
                <StackPanel
                    Grid.Row="1"
                    VerticalAlignment="Center"
                    Visibility="{Binding MemoTables.Count, Converter={StaticResource IntToVisibilityConverter}}">
                    <Image
                        Width="120"
                        Height="120"
                        Source="/Images/wind.png" />
                    <TextBlock
                        Margin="0,20"
                        HorizontalAlignment="Center"
                        FontSize="18"
                        Text="未搜索到任何数据请添加新的备忘录或重新搜索" />
                </StackPanel>
                <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Hidden">
                    <ItemsControl HorizontalAlignment="Center" ItemsSource="{Binding MemoTables}">
                        <!--  定义容器部分  -->
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <!--  定义模板部分  -->
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <materialDesign:TransitioningContent OpeningEffect="{materialDesign:TransitionEffect Kind=ExpandIn}">
                                    <Grid
                                        Width="220"
                                        MinHeight="180"
                                        MaxHeight="250"
                                        Margin="10">
                                        <!--  行为触发器  -->
                                        <b:Interaction.Triggers>
                                            <b:EventTrigger EventName="MouseLeftButtonUp">
                                                <b:InvokeCommandAction Command="{Binding DataContext.SelectedCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}}" CommandParameter="{Binding}" />
                                            </b:EventTrigger>
                                        </b:Interaction.Triggers>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <!--  Panel.ZIndex="1"当元素存在重叠时通过此属性来设置层叠先后  -->
                                        <materialDesign:PopupBox HorizontalAlignment="Right" Panel.ZIndex="1">
                                            <Button
                                                Command="{Binding DataContext.DeleteCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}}"
                                                CommandParameter="{Binding}"
                                                Content="删除" />
                                        </materialDesign:PopupBox>
                                        <Border
                                            Grid.RowSpan="2"
                                            Background="DarkCyan"
                                            CornerRadius="5" />
                                        <!--  指定容器内部元素与容器边框的距离  -->
                                        <!--  margin与padding的区别：例如两个文本框的距离使用margin，文本框的边框和文本内容之间的距离使用padding  -->
                                        <TextBlock
                                            Padding="10,5"
                                            FontWeight="Bold"
                                            Text="{Binding Title}" />
                                        <TextBlock
                                            Grid.Row="1"
                                            Padding="10,5"
                                            Text="{Binding Content}" />

                                        <Canvas Grid.RowSpan="2" ClipToBounds="True">
                                            <Border
                                                Canvas.Top="10"
                                                Canvas.Right="-50"
                                                Width="120"
                                                Height="120"
                                                Background="Aqua"
                                                CornerRadius="100"
                                                Opacity="0.2" />
                                            <Border
                                                Canvas.Top="80"
                                                Canvas.Right="-30"
                                                Width="120"
                                                Height="120"
                                                Background="Aqua"
                                                CornerRadius="100"
                                                Opacity="0.2" />
                                        </Canvas>
                                    </Grid>
                                </materialDesign:TransitioningContent>

                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </ScrollViewer>
            </Grid>
        </materialDesign:DrawerHost>
    </materialDesign:DialogHost>
</UserControl>
